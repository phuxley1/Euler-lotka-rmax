mydata <- read.csv("../Data/CollatedDataset.csv")
ids <- unique(mydata$Unq_ID)
traitnames <- unique(mydata$Trait)
library(dplyr)
library(dplyr)
source("temp_v4.R")
i
ids
q
Q
ids <- unique(mydata$Unq_ID) # get unique ids (TPC datasets)
ids
source("temp_v5.R")
source("temp_v5.R")
which(mydata$Unq_ID == i)
mydata[which(mydata$Unq_ID == i)),]
mydata[which(mydata$Unq_ID == i),]
subset(mydata,  Unq_ID == i)
subset(mydata,  Unq_ID == i)
tmpData <-subset(mydata,  Unq_ID == i)
tmpData
AgeFirst1 <- lm(tmpData$TraitValueSI ~ tmpData$AmbientTemp)
AgeFirst1
AgeFirst2 <- lm(tmpData$TraitValueSI ~ tmpData$AmbientTemp + I(tmpData$AmbientTemp^2))
AgeFirst2
AgeFirst3
AgeFirst3 <- lm(tmpData$TraitValueSI ~tmpData$AmbientTemp +I(tmpData$AmbientTemp^3))
pdf(paste('../Results/', i,"_plot.pdf", sep = ''))
unique(tmpData$Trait)
ylabname <- unique(tmpData$Trait)
plot(tmpData$AmbientTemp,tmpData$TraitValueSI,xlab="Ambient temperature (C)" ,ylab=unique(tmpData$Trait))
dev.off()
class(AgeFirst1)
AgeFirst1$coefficients
AgeFirst1$coefficients[1]
AgeFirst1$coefficients[2]
AgeFirst1$coefficients[3]
AgeFirst1$residuals
AIC_AgeFirst1 <- AIC(AgeFirst1)
AIC_AgeFirst2 <- AIC(AgeFirst2)
AIC_AgeFirst3 <- AIC(AgeFirst3)
source("temp_v5.R")
source("temp_v5.R")
ResTable <- matrix(0,lenth(ids),10)
ResTable <- matrix(0,length(ids),10)
ResTable
ResTableHeaders <- c("ID","TraitName","n","n_T","p1","p2","p3","Rsq","FVal")
ResTable <- matrix(0,length(ids),length(ResTableHeaders))
ResTable
ResTable <- as.data.frame(matrix(0,length(ids),length(ResTableHeaders)))
ResTable
colnames(ResTable) <-  ResTableHeaders
colnames(ResTable)
source("temp_v5.R")
ResTable$ID
ResTable$TraitName
ResTable$TraitName[i]
unique(tmpData$Trait)
?read.csv
mydata <- read.csv("../Data/CollatedDataset.csv", stringsAsFactors = F)
Q
source("temp_v5.R")
ResTable$ID[i]
ResTable$TraitName[i]
nrow(tmpData)
ResTable$n[i] <- nrow(tmpData) # sample size
length(unique(tmpData$AmbientTemp))
AIC_AgeFirst1
AIC_AgeFirst2
AIC_AgeFirst3
c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3)
min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))
if (AIC_AgeFirst1 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))){
tmpModel <- AgeFirst1
} else if (AIC_AgeFirst2 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))){
tmpModel <- AgeFirst2
}else {tmpModel <- AgeFirst3}
tmpModel
AIC_AgeFirst1 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3)
)
AIC_AgeFirst2 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))
if (AIC_AgeFirst1 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))){
tmpModel <- AgeFirst1}
else if (AIC_AgeFirst2 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))){
tmpModel <- AgeFirst2}
else {tmpModel <- AgeFirst3}
if (AIC_AgeFirst1 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))){
tmpModel <- AgeFirst1
} else if (AIC_AgeFirst2 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))){
tmpModel <- AgeFirst2
}else {tmpModel <- AgeFirst3}
tmpModel
AgeFirst3
AgeFirst2
AgeFirst3
if (AIC_AgeFirst1 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))){
tmpModel <- AgeFirst1
} else if (AIC_AgeFirst2 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))){
tmpModel <- AgeFirst2
}else tmpModel <- AgeFirst3
tmpModel
AgeFirst3
if (AIC_AgeFirst1 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))){
tmpModel <- AgeFirst1
} else if (AIC_AgeFirst2 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))){
tmpModel <- AgeFirst2}else tmpModel <- AgeFirst3
tmpModel
if (AIC_AgeFirst1 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))){
tmpModel <- AgeFirst1
} else if (AIC_AgeFirst2 == min(c(AIC_AgeFirst1,AIC_AgeFirst2,AIC_AgeFirst3))){
tmpModel <- AgeFirst2}else tmpModel <- AgeFirst3
Q
source("temp_v5.R")
tmpModel
tmpModel
AgeFirst3
tmpModel
rm(list = ls())
Q
rm(list = ls()) # remove all existing objects
graphics.off() # close all open graphics devices
source("temp_v5.R")
source("temp_v5.R")
tmpModel
tmpModel
Q
source("temp_v5.R")
tmpModel
tmpModel
tmpModel
AgeFirst3
tmpModel$coefficients
tmpModel$coefficients[1]
tmpModel$coefficients[1]ResTable$p1[i] <- tmpModel$coefficients[1] # p1 coefficient
ResTable$p2[i] <- tmpModel$coefficients[2] # p2 coefficient
ResTable$p3[i] <- tmpModel$coefficients[3] # p3 coefficient
ResTable$p2[i] <- tmpModel$coefficients[2] # p2 coefficient
tmpModel$coefficients[1]
tmpModel$coefficients[1][1]
ResTable$p1[i] <- tmpModel$coefficients[1][1]
summary(tmpModel)$coefficients
summary(tmpModel)$coefficients$Estimate
summary(tmpModel)$coefficientsp[1]
summary(tmpModel)$coefficientsp[1,1]
summary(tmpModel)$coefficients[1,1]
summary(tmpModel)$coefficients[1,1]
summary(tmpModel)$coefficients[1]
summary(tmpModel)$coefficients[2]
summary(tmpModel)$coefficients[3]
summary(tmpModel)$coefficients[4]
summary(tmpModel)$coefficients
summary(tmpModel)$coefficients[4]
summary(tmpModel)$coefficients[1]
ResTable$p1[i] <- summary(tmpModel)$coefficients[1] # p1 coefficient
tmpModel$coefficients[1]
as.numeric(tmpModel$coefficients[1])
ResTable$p1[i] <- as.numeric(tmpModel$coefficients[1]) # p1 coefficient
ResTable$p1[i]
Q
source("temp_v5.R")
as.numeric(tmpModel$coefficients[1])
tmpModel$coefficients[1]
ResTable$p1[i] <- as.numeric(tmpModel$coefficients[1]) # p1 coefficient
ResTable$p1[i] <- as.numeric(tmpModel$coefficients[1]) # p1 coefficient
ResTable$p2[i] <- as.numeric(tmpModel$coefficients[2]) # p2 coefficient
ResTable$p3[i] <- as.numeric(tmpModel$coefficients[3]) # p3 coefficient
as.numeric(tmpModel$coefficients[4])
summary(tmpModel)
summary
?tmpModel
tmpModel$terms
summary(tmpModel)
tmp <- summary(tmpModel)
tmp
tmp$residuals
tmp$coefficients
Q
source("temp_v5.R")
tmpModel$coefficients[1]
ResTable$p1[i] <- as.numeric(tmpModel$coefficients[1]) # p1 coefficient
ResTable$p2[i] <- as.numeric(tmpModel$coefficients[2]) # p2 coefficient
ResTable$p3[i] <- as.numeric(tmpModel$coefficients[3]) # p3 coefficient
ResTable$p1[i]
ResTable$p2[i]
ResTable$p3[i]
tmpModel$residuals
tmpModel$r.squared
tmpModel$r.squaredtmpModel$r.squared
tmpModel$r.squared
ResTable$p1[i] <- tmpModel$coefficients[1]
Q
source("temp_v5.R")
tmpModel$fstatistic
tmpModel$fstatistic[1]
tmpModel$fstatistic[1]write.csv(ResTable, '../Results/Results.csv')
?write.csv
ResTable
head(ResTable)
write.csv(ResTable, file = '../Results/Results.csv',row.names = F)
list.files("../Results")
file.remove(list = list.files("../Results"))
file.remove(list.files("../Results"))
Q
source("temp_v5.R")
coefficients(tmpModel)
source("temp_v5.R")
source("temp_v5.R")
coefficients(tmpModel)
plot(tmpData$AmbientTemp,tmpData$TraitValueSI,xlab="Ambient temperature (C)" ,ylab=unique(tmpData$Trait))
source("temp_v5.R")
plot(tmpData$AmbientTemp,tmpData$TraitValueSI,xlab="Ambient temperature (C)" ,ylab=unique(tmpData$Trait))
abline(coefficients(tmpModel)) #add regression line
abline(lm(tmpData$TraitValueSI ~ tmpData$AmbientTemp)) #add regression line
plot(tmpData$AmbientTemp,tmpData$TraitValueSI,xlab="Ambient temperature (C)" ,ylab=unique(tmpData$Trait))
abline(lm(tmpData$TraitValueSI ~tmpData$AmbientTemp +I(tmpData$AmbientTemp^3))) #add regression line
library(ggplot2)
prd <- data.frame(temps = seq(from = range(tmpData$AmbientTemp)[1], to = range(range(tmpData$AmbientTemp)[2], length.out = 100))
prd <- data.frame(temps = seq(from = range(tmpData$AmbientTemp)[1], to = range(range(tmpData$AmbientTemp)[2], length.out = 100))
prd <- data.frame(temps = seq(from = range(tmpData$AmbientTemp)[1], to = range(range(tmpData$AmbientTemp)[2], length.out = 100))
Q
prd <- data.frame(temps = seq(from = range(tmpData$AmbientTemp)[1], to = range(range(tmpData$AmbientTemp)[2], length.out = 100)))
seq(from = range(tmpData$AmbientTemp)[1], to = range(range(tmpData$AmbientTemp)[2], length.out = 100))
range(tmpData$AmbientTemp)
seq(from = range(tmpData$AmbientTemp)[1], to = range(range(tmpData$AmbientTemp)[2], length.out = 100))
prd <- data.frame(temps = seq(from = range(tmpData$AmbientTemp)[1], to = range(tmpData$AmbientTemp)[2], length.out = 100))
prd
err <- predict(tmpModel, newdata = prd, se.fit = TRUE)
ResTable$p1[i] <- summary(tmpModel)$coefficients[1] # p1 coefficient
summary(tmpModel)$coefficients[1]
err <- predict(AgeFirst3, newdata = prd, se.fit = TRUE)
prd <- data.frame(temps = seq(from = range(tmpData$AmbientTemp)[1], to = range(tmpData$AmbientTemp)[2], length.out = 100))
err <- predict(AgeFirst3, newdata = prd, se.fit = TRUE)
prd
AgeFirst3
Q
source("temp_v5.R")
Q
AgeFirst2 <- lm(tmpData$TraitValueSI ~ tmpData$AmbientTemp + I(tmpData$AmbientTemp^2))
summary(AgeFirst2)
rm(list = ls()) # remove all existing objects
graphics.off() # close all open graphics devices
mydata <- read.csv("../Data/CollatedDatasetB.csv")
head(mydata)
str(mydata)
unique(mydata$Trait)
unique(mydata$OLDTraitUnit)
unique(mydata$TraitUnitSI)
rm(list = ls()) # remove all existing objects
graphics.off() # close all open graphics devices
mydata <- read.csv("../Data/CollatedDatasetB.csv")
unique(mydata$Species)
unique(mydata$Genus)
mydata$GenusSpecies <- paste(mydata$Genus,mydata$Species,sep = " ")
unique(mydata$GenusSpecies)
MySpecies <- MySpecies <- unique(mydata$GenusSpecies)unique(mydata$GenusSpecies)
mydata$GenusSpecies <- paste(mydata$Genus,mydata$Species,sep = " ")
MySpecies <- unique(mydata$GenusSpecies)
MySpecies
len(MySpecies)
nrow(MySpecies)
size(MySpecies)
MySpecies
ncol(MySpecies)
nrow(MySpecies)
size(MySpecies)
class(MySpecies)
as.vector(MySpecies)
MySpecies <- unique(mydata$GenusSpecies)
MySpecies
nrow(mydata)
nrow(MySpecies)
nrow(as.vector(MySpecies))
nrow(MySpecies[,1])
nrow(MySpecies[1,])
MySpecies <- unique(mydata$GenusSpecies)
MySpecies
as.matrix(MySpecies)
MySpecies <- as.matrix(unique(mydata$GenusSpecies))
MySpecies <- as.matrix(unique(mydata$GenusSpecies))
MySpecies
nrow(MySpecies)
source("DataAnal.R")
source("DataAnal.R")
source("DataAnal.R")
source("DataAnal.R")
tmpData <- subset(mydata, GenusSpecies = MySpecies[i])
tmpData
MySpecies[i]
unique(tmpData$GenusSpecies)
tmpData <- subset(mydata, GenusSpecies == MySpecies[i])
unique(tmpData$GenusSpecies)
Q
MyTraits <- unique(mydata$Trait)
MyTraits <- unique(mydata$Trait)
MyTraits
tmpData$UniqueID
tmpData$Unq_ID
MyID <- unique(tmpData$Unq_ID)
source("DataAnal.R")
MyTraits
Q
